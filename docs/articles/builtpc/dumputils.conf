#
# Copyright 1999-2005 Silicon Graphics, Inc. All rights reserved.
# Copyright 2004-2005 Silicon Graphics, Inc. All rights reserved.
#
# This file contains the configuration variables for Linux kernel crash
# dumps.  The file should reside in /etc/dumputils.conf, with permissions
# set to 0644.  There are currently eight variables defined in this file:
#
#     DUMP_ACTIVE
#     DUMPDEV
#     DUMPDIR
#     DUMP_SAVE
#     DUMP_LEVEL
#     DUMP_FLAGS
#     DUMP_COMPRESS
#     PANIC_TIMEOUT
#
# Each one is documented below.
# ---------------------------------------------------------------------------
# DUMP_ACTIVE indicates whether the dump process is active or not.  If this
# variable is 0, the dump kernel process will not be activated.
# Note that configuring with DUMP_ACTIVE 0 will not deactivate an already
# configured dump driver.  
# ---------------------------------------------------------------------------
# DUMPDEV represents the name of the dump device.  It is typically
# the primary swap partition on the local system, although any disk
# device can be used.  Please be EXTRA careful when defining this
# value, as one false slip can cause all kinds of problems.
#
# Note that we currently recommend a dedicated partition for the dump
# device, and not the swap partition.
#
# Currently, a link is created from /dev/vmdump to the right device;
# rename this to the exact device to dump to if that's what you want.
# 
# ---------------------------------------------------------------------------
# DUMPDIR is the location where crash dumps are saved.  In that
# directory, a file called 'bounds' will be created, which is
# the current index of the last crash dump saved.  The 'bounds'
# file will be updated with an incremented once a new crash dump or
# crash report is saved.
# 
# The DUMPDIR location may either be a standard directory such as 
# /var/log/dump or it may be an FTP URL in the form:
# ftp://user:password@host:port/path
# Where user & password, port and path are optional. 
# 
# ---------------------------------------------------------------------------
# DUMP_LEVEL has a number of possible values:
#
#     DUMP_NONE (0):  Do nothing, just return if called.
#   DUMP_HEADER (1):  Dump the dump header and first 128K bytes out.
#     DUMP_KERN (2):  Everything in DUMP_HEADER and kernel pages only.
#     DUMP_USED (4):  Everything except kernel free pages.
#      DUMP_ALL (8):  All memory.
#
# For now, either DUMP_NONE, DUMP_HEADER or DUMP_ALL are valid, until
# someone comes along and adds page typing, at which time DUMP_KERN and
# DUMP_USED should be added.  NOTE:  You must use the numeric value, not
# the name of the variable.
# ---------------------------------------------------------------------------
# DUMP_COMPRESS indicates which compression mechanism the kernel should
# attempt to use for compression -- the new method is not to use dump
# compression unless someone specifically asks for it.  There are multiple
# types of compression available.  For now, if you 'modprobe dump_rle',
# the dump_rle.o module will be installed, which enables RLE compression
# of the dump pages.  The RLE compression algorithm used in the kernel
# gives (on average) 40% compression of the memory image, which can
# vary depending on how much memory is used on the system.  There are
# also other compression modules coming (such as GZIP).  The values for
# DUMP_COMPRESS are currently:
#
#   DUMP_COMPRESS_NONE(0):  Don't compress this dump.
#    DUMP_COMPRESS_RLE(1):  Use RLE compression.
#   DUMP_COMPRESS_GZIP(2):  Use GZIP compression.
# ---------------------------------------------------------------------------
# For 2.4 Kernel based systems:
#
# 2.4 kernels expect to see DUMP_FLAGS as a decimal number. 
#
# DUMP_FLAGS are the flag parameters to use when configuring system dumps.
# There are multiple values coming, but for now, the only valid value is
# DUMP_FLAGS_NONDISRUPT.  The table includes:
#
#         DUMP_FLAGS_NONE(0):  No flags are required.
#   DUMP_FLAGS_NONDISRUPT(1):  Do not reboot after dumping; continue running.
#   
#   DUMP_FLAGS_NONDISRUPT is not recommended.
#
# For 2.6 Kernel based systems:
#
# 2.6 kernels expect to see DUMP_FLAGS as a hex number. 
#
# DUMP_FLAGS are the flag parameters to use when configuring system dumps.
# it consists of a base value that specifies the dump type and optional
# values that specifies features. 
#
# The table includes:
#     DUMP_FLAGS_DISKDUMP(0x80000000):  Dump target is a local block device.
#         DUMP_FLAGS_POLL(0x00000004):  Use polling I/O if available.
#
# Right now the only valid base value is:
#
#	DUMP_FLAGS=0x80000000  -- dump target is a local block device.
#
# and the only valid feature value is: 
#
#	DUMP_FLAGS_POLL(0x00000004):  Use polling I/O if available.
#
# So you either have a choice of: 
#	DUMP_FLAGS=0x80000000  -- dump to block device interrupt driven.
#       or 
#	DUMP_FLAGS=0x80000004  -- dump to block device polling I/O driven.
#
# It is important to note that polling I/O driven will fall back to interrupt
# driven if there is not a polling I/O driver available for your block device 
# or you are using an older version of LKCD that does not support polling I/O.
#
# ---------------------------------------------------------------------------
# DUMP_SAVE defines whether to save the memory image to disk or not.
# If the value is 1, the vmcore image is stored, and a crash report
# is created from the saved dump.  If it is not set to 1, only a crash
# report will be created, and the dump will not be saved.  This option
# can be used on systems that do not want their disk space consumed
# by large crash dump images.
#
# DUMP_SAVE values other than 1 do not currently produce useful output.
#
# ---------------------------------------------------------------------------
# PANIC_TIMEOUT represents the timeout (in seconds) before reboot after a
# panic occurs.  Typically this is set to 0 on the system, which means the
# kernel sits and spins until someone resets the machine.  This is not the
# preferred action if we want to recover the dump after the reboot.
# ---------------------------------------------------------------------------
#
DUMP_ACTIVE=1
DUMPDEV=/dev/vmdump
DUMPDIR=/var/log/dump
DUMP_SAVE=1
DUMP_LEVEL=8
DUMP_COMPRESS=2
PANIC_TIMEOUT=5
DUMP_FLAGS=0x80000000
